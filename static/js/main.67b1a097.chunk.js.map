{"version":3,"sources":["Position.tsx","Icon.tsx","Shell.tsx","Perspective.tsx","Board.tsx","Menu.tsx","App.tsx","index.tsx"],"names":["getWindowWidth","window","innerWidth","getWindowHeight","innerHeight","DEFAULT_POSITION","viewportWidth","viewportHeight","pointerX","pointerY","PositionContext","React","createContext","usePositionContext","useContext","PositionProvider","children","useState","position","setPosition","useEffect","console","log","LoadControl","event","clientX","clientY","moveLoadControl","cleanUpMoveLoadControl","addEventListener","setTimeout","document","body","click","removeEventListener","Provider","value","ICON_LIST","ICON_DEFAULT","ICON_PATHS","dice","d","bank","height","width","x","y","points","bug","smile","game","ICON_COLORS","light","medium","dark","getIconColor","kind","Svg","styled","svg","Icon","className","viewBox","DEFAULT_CONTEXT","activeIcon","handleIconChange","undefined","iconColors","IconContext","useIconContext","IconProvider","setActiveIcon","styleFullPageFixed","css","Foreground","div","percentage","colors","Background","Shell","calculatePercentageOffset","Center","Wrapper","Board","degrees","depth","z","Array","fill","reduce","acc","_","index","trimStart","Perspective","halfWidth","halfHeight","isXPositive","isYPositive","xRatio","yRatio","calculateDegrees","ratio","calculateDepth","isPositive","Math","abs","calculatePerspective","styleButtonReset","Ring","button","isActive","List","Item","Menu","map","key","onClick","GlobalStyle","createGlobalStyle","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.67b1a097.chunk.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport LoadControl from \"eggs-benedict\";\n\nexport interface PositionData {\n  viewportWidth: number;\n  viewportHeight: number;\n  pointerX: number;\n  pointerY: number;\n}\n\nconst getWindowWidth = () => window.innerWidth;\nconst getWindowHeight = () => window.innerHeight;\n\nconst DEFAULT_POSITION = {\n  viewportWidth: getWindowWidth(),\n  viewportHeight: getWindowHeight(),\n  pointerX: 0,\n  pointerY: 0,\n};\n\nconst PositionContext = React.createContext(DEFAULT_POSITION);\n\nexport const usePositionContext = () => React.useContext(PositionContext);\n\nexport const PositionProvider: FunctionComponent<{}> = ({ children }) => {\n  const [position, setPosition] = React.useState<PositionData>(\n    DEFAULT_POSITION\n  );\n\n  React.useEffect(() => {\n    console.log(\"setup\");\n\n    const calculatePosition = (event: MouseEvent) => {\n      console.log(\"do things!!!!\");\n\n      setPosition({\n        viewportWidth: getWindowWidth(),\n        viewportHeight: getWindowHeight(),\n        pointerX: event.clientX,\n        pointerY: event.clientY,\n      });\n\n      //   event.preventDefault();\n    };\n\n    const [moveLoadControl, cleanUpMoveLoadControl] = LoadControl(\n      calculatePosition\n      // { throttleDelay: 250 }\n    );\n\n    window.addEventListener(\"pointermove\", moveLoadControl);\n    // window.addEventListener(\"mousemove\", moveLoadControl);\n    // window.addEventListener(\"onTouchMove\", moveLoadControl);\n    // window.addEventListener(\"onTouchStart\", moveLoadControl);\n\n    setTimeout(() => {\n      document.body.click();\n    }, 100);\n\n    return () => {\n      cleanUpMoveLoadControl();\n      window.removeEventListener(\"pointermove\", moveLoadControl);\n      //   window.removeEventListener(\"mousemove\", moveLoadControl);\n      //   window.removeEventListener(\"onTouchMove\", moveLoadControl);\n      //   window.removeEventListener(\"onTouchStart\", moveLoadControl);\n    };\n  }, []);\n\n  return (\n    <PositionContext.Provider value={position}>\n      {children}\n    </PositionContext.Provider>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\n\nexport type IconKinds = \"dice\" | \"bank\" | \"bug\" | \"smile\" | \"game\";\n\nexport interface IconColor {\n  light: string;\n  medium: string;\n  dark: string;\n}\n\ninterface IconProps {\n  kind: IconKinds;\n  className?: string;\n}\n\nexport const ICON_LIST: IconKinds[] = [\"dice\", \"bank\", \"bug\", \"smile\", \"game\"];\n\nconst ICON_DEFAULT = ICON_LIST[0];\n\nconst ICON_PATHS = {\n  dice: (\n    <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM7.5 18c-.83 0-1.5-.67-1.5-1.5S6.67 15 7.5 15s1.5.67 1.5 1.5S8.33 18 7.5 18zm0-9C6.67 9 6 8.33 6 7.5S6.67 6 7.5 6 9 6.67 9 7.5 8.33 9 7.5 9zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm0-9c-.83 0-1.5-.67-1.5-1.5S15.67 6 16.5 6s1.5.67 1.5 1.5S17.33 9 16.5 9z\" />\n  ),\n  bank:\n    // prettier-ignore\n    <><rect height=\"7\" width=\"3\" x=\"4\" y=\"10\" /><rect height=\"7\" width=\"3\" x=\"10.5\" y=\"10\" /><rect height=\"3\" width=\"20\" x=\"2\" y=\"19\" /><rect height=\"7\" width=\"3\" x=\"17\" y=\"10\" /><polygon points=\"12,1 2,6 2,8 22,8 22,6\" /></>,\n  bug: (\n    <path d=\"M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8zm-6 8h-4v-2h4v2zm0-4h-4v-2h4v2z\" />\n  ),\n  smile: (\n    <path d=\"M11.99,2C6.47,2,2,6.48,2,12c0,5.52,4.47,10,9.99,10C17.52,22,22,17.52,22,12C22,6.48,17.52,2,11.99,2z M8.5,8 C9.33,8,10,8.67,10,9.5S9.33,11,8.5,11S7,10.33,7,9.5S7.67,8,8.5,8z M12,18c-2.28,0-4.22-1.66-5-4h10C16.22,16.34,14.28,18,12,18z M15.5,11c-0.83,0-1.5-0.67-1.5-1.5S14.67,8,15.5,8S17,8.67,17,9.5S16.33,11,15.5,11z\" />\n  ),\n  game: (\n    <path d=\"M21.58,16.09l-1.09-7.66C20.21,6.46,18.52,5,16.53,5H7.47C5.48,5,3.79,6.46,3.51,8.43l-1.09,7.66 C2.2,17.63,3.39,19,4.94,19h0c0.68,0,1.32-0.27,1.8-0.75L9,16h6l2.25,2.25c0.48,0.48,1.13,0.75,1.8,0.75h0 C20.61,19,21.8,17.63,21.58,16.09z M11,11H9v2H8v-2H6v-1h2V8h1v2h2V11z M15,10c-0.55,0-1-0.45-1-1c0-0.55,0.45-1,1-1s1,0.45,1,1 C16,9.55,15.55,10,15,10z M17,13c-0.55,0-1-0.45-1-1c0-0.55,0.45-1,1-1s1,0.45,1,1C18,12.55,17.55,13,17,13z\" />\n  ),\n};\n\nexport const ICON_COLORS = {\n  dice: {\n    light: \"#C0EFFF\",\n    medium: \"#00bfff\",\n    dark: \"#008DBC\",\n  },\n  bank: {\n    light: \"#BFFFEA\",\n    medium: \"#00FFAA\",\n    dark: \"#00A36C\",\n  },\n  bug: {\n    light: \"#FFEBBF\",\n    medium: \"#FFB000\",\n    dark: \"#BD8100\",\n  },\n  smile: {\n    light: \"#FFCADF\",\n    medium: \"#FF0062\",\n    dark: \"#AB0042\",\n  },\n  game: {\n    light: \"#E1BFFF\",\n    medium: \"#8800FF\",\n    dark: \"#5900A7\",\n  },\n};\n\nexport const getIconColor = (kind: IconKinds) => ICON_COLORS[kind];\n\nexport const Svg = styled.svg`\n  max-height: 100vh;\n  max-width: 100%;\n`;\n\nexport const Icon: FunctionComponent<IconProps> = ({ kind, className }) => (\n  <Svg viewBox=\"0 0 24 24\" className={className}>\n    {ICON_PATHS[kind]}\n  </Svg>\n);\n\nconst DEFAULT_CONTEXT = {\n  activeIcon: ICON_DEFAULT,\n  handleIconChange: undefined,\n  iconColors: getIconColor(ICON_DEFAULT),\n};\n\nconst IconContext = React.createContext<{\n  activeIcon: IconKinds;\n  handleIconChange?: any;\n  iconColors: IconColor;\n}>(DEFAULT_CONTEXT);\n\nexport const useIconContext = () => React.useContext(IconContext);\n\nexport const IconProvider: FunctionComponent<{}> = ({ children }) => {\n  const [activeIcon, setActiveIcon] = React.useState(ICON_DEFAULT);\n\n  return (\n    <IconContext.Provider\n      value={{\n        activeIcon,\n        handleIconChange: setActiveIcon,\n        iconColors: getIconColor(activeIcon),\n      }}\n    >\n      {children}\n    </IconContext.Provider>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { usePositionContext, PositionData } from \"./Position\";\nimport { useIconContext, IconColor } from \"./Icon\";\n\ninterface Percentage {\n  x: number;\n  y: number;\n}\n\nconst TRANSFORM_MS_SPEED = 500;\n\nconst styleFullPageFixed = css`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst Foreground = styled.div<{ percentage: Percentage; colors: IconColor }>`\n  ${styleFullPageFixed}\n  background: ${({ percentage, colors }) =>\n    `radial-gradient(circle at ${percentage.x}% ${percentage.y}%, white, ${colors.dark})`};\n  mix-blend-mode: multiply;\n  pointer-events: none;\n  transition: ${TRANSFORM_MS_SPEED};\n  z-index: 10;\n`;\n\nconst Background = styled.div<{ colors: IconColor }>`\n  ${styleFullPageFixed}\n  background: ${({ colors }) => colors.medium};\n  transition: ${TRANSFORM_MS_SPEED};\n  z-index: -1;\n`;\n\nconst calculatePercentageOffset = ({\n  viewportWidth,\n  viewportHeight,\n  pointerX,\n  pointerY,\n}: PositionData) => ({\n  x: (pointerX / viewportWidth) * 100,\n  y: (pointerY / viewportHeight) * 100,\n});\n\nexport const Shell: FunctionComponent<{}> = ({ children }) => {\n  const positionData = usePositionContext();\n  const percentage = calculatePercentageOffset(positionData);\n  const { iconColors } = useIconContext();\n\n  return (\n    <>\n      <Foreground percentage={percentage} colors={iconColors} />\n      {children}\n      <Background colors={iconColors} />\n    </>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { Svg as Board } from \"./Icon\";\nimport { usePositionContext, PositionData } from \"./Position\";\nimport { useIconContext, IconColor } from \"./Icon\";\n\ninterface DegreesState {\n  x: number;\n  y: number;\n}\n\ninterface DepthState {\n  z: number;\n  x: number;\n  y: number;\n}\n\ninterface Perspective {\n  clientX: number;\n  clientY: number;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n}\n\nconst MAX_DEGREES_OFFSET = 25;\nconst MAX_DEPTH_OFFSET = 10;\nconst TRANSFORM_MS_SPEED = 500;\n\nconst Center = styled.div`\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n`;\n\nconst Wrapper = styled.div<{\n  degrees: DegreesState;\n  depth: DepthState;\n  colors: IconColor;\n}>`\n  perspective: 80rem;\n\n  ${Board} {\n    fill: ${({ colors }) => colors.light};\n    transition-duration: ${TRANSFORM_MS_SPEED}ms;\n    transition-property: transform filter;\n    transform: ${({ degrees: { x, y } }) => {\n      // Note: To manipulate the horizontal perspective we need to target the\n      // opposite axis i.e to change X we target Y (and vice versa).\n      return `rotateY(${x}deg) rotateX(${y}deg);`;\n    }};\n    filter: ${({ depth: { z, x, y }, colors }) => {\n      // Build up each depth layer with a consistent offset incrementer that\n      // moves each layer away to simulate a solid Z axis extrude.\n      return new Array(z)\n        .fill(0)\n        .reduce(\n          (acc, _, index) =>\n            `${acc} drop-shadow(${x * (index + 1)}px ${y * (index + 1)}px 0px ${\n              colors.dark\n            })`,\n          \"\"\n        )\n        .trimStart();\n    }};\n  }\n`;\n\nconst calculatePerspective = ({\n  viewportWidth,\n  viewportHeight,\n  pointerX,\n  pointerY,\n}: PositionData) => {\n  // Get positive/negative \"3D\" references for X/Y axis offset:\n  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  // + Find quadrant where X/Y pointer resides in board.\n  const halfWidth = viewportWidth / 2;\n  const halfHeight = viewportHeight / 2;\n  const isXPositive = pointerX >= halfWidth;\n  const isYPositive = pointerY >= halfHeight;\n\n  const xRatio = isXPositive\n    ? // Start with \"zero\" as the centre and move back so the left side is \"one\".\n      // Push the left side towards the user.\n      halfWidth / (halfWidth - pointerX)\n    : // Start with \"zero\" as the centre and move forward so the right side is \"one\".\n      // Push the right side towards the user.\n      (halfWidth / (pointerX - halfWidth)) * -1;\n\n  const yRatio = isYPositive\n    ? // Start with \"zero\" as the centre and move up so the top side is \"one\".\n      // Push the top side towards the user.\n      (halfHeight / (halfHeight - pointerY)) * -1\n    : // Start with \"zero\" as the centre and move forward so the right side is \"one\".\n      // Push the top side towards the user.\n      halfHeight / (pointerY - halfHeight);\n\n  // Calculate degree offset for X/Y.\n  const calculateDegrees = (ratio: number): number =>\n    MAX_DEGREES_OFFSET / ratio;\n  const xDegrees = calculateDegrees(xRatio);\n  const yDegrees = calculateDegrees(yRatio);\n\n  // Calculate depth offset for X/Y.\n  const calculateDepth = (isPositive: boolean, ratio: number): number =>\n    (MAX_DEPTH_OFFSET / Math.abs(ratio) / MAX_DEPTH_OFFSET) *\n    (isPositive ? 1 : -1);\n  const xDepth = calculateDepth(isXPositive, xRatio);\n  const yDepth = calculateDepth(isYPositive, yRatio);\n\n  const degrees = {\n    x: xDegrees,\n    y: yDegrees,\n  };\n\n  const depth = {\n    z: MAX_DEPTH_OFFSET,\n    x: xDepth,\n    y: yDepth,\n  };\n\n  return { degrees, depth };\n};\n\nexport const Perspective: FunctionComponent<{}> = ({ children }) => {\n  const positionData = usePositionContext();\n  const { degrees, depth } = calculatePerspective(positionData);\n  const { iconColors } = useIconContext();\n\n  return (\n    <Center>\n      <Wrapper degrees={degrees} depth={depth} colors={iconColors}>\n        {children}\n      </Wrapper>\n    </Center>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { Icon, useIconContext } from \"./Icon\";\n\nexport const Board: FunctionComponent<{}> = () => {\n  const { activeIcon } = useIconContext();\n\n  return <Icon kind={activeIcon} />;\n};\n","import React, { FunctionComponent } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Icon, useIconContext, getIconColor, ICON_LIST } from \"./Icon\";\n\nconst styleButtonReset = css`\n  background: transparent;\n  border: 0;\n  cursor: pointer;\n  outline: 0;\n  padding: 0;\n`;\n\nconst Ring = styled.button<{ isActive: boolean }>`\n  ${styleButtonReset}\n  align-items: center;\n  background: white;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  height: 3rem;\n  margin: 1rem;\n  position: relative;\n  width: 3rem;\n\n  ${({ isActive }) =>\n    isActive &&\n    css`\n      &:before {\n        border: 2px solid white;\n        border-radius: 50%;\n        content: \"\";\n        display: block;\n        position: absolute;\n        height: calc(100% + 6px);\n        width: calc(100% + 6px);\n      }\n    `}\n`;\n\nconst List = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 20;\n`;\n\nconst Item = styled(Icon)`\n  height: 2rem;\n  width: 2rem;\n  fill: ${({ kind }) => getIconColor(kind).medium};\n`;\n\nexport const Menu: FunctionComponent<{}> = () => {\n  const { handleIconChange, activeIcon } = useIconContext();\n  return (\n    <List>\n      v1.0.1\n      {ICON_LIST.map((kind) => (\n        <Ring\n          key={kind}\n          isActive={activeIcon === kind}\n          onClick={() => handleIconChange(kind)}\n        >\n          <Item kind={kind} />\n        </Ring>\n      ))}\n    </List>\n  );\n};\n","import React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { Shell } from \"./Shell\";\nimport { PositionProvider } from \"./Position\";\nimport { IconProvider } from \"./Icon\";\nimport { Perspective } from \"./Perspective\";\nimport { Board } from \"./Board\";\nimport { Menu } from \"./Menu\";\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    touch-action: none !important;\n  }\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <IconProvider>\n        <PositionProvider>\n          <Shell>\n            <Menu />\n            <Perspective>\n              <Board />\n            </Perspective>\n          </Shell>\n        </PositionProvider>\n      </IconProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}